{"version":3,"sources":["src/app/admin/orders/info-order/info-order.component.html","src/app/admin/orders/list-order/list-order.component.html","src/app/admin/orders/info-order/info-order.component.scss","src/app/admin/orders/info-order/info-order.component.ts","src/app/admin/orders/list-order/list-order.component.scss","src/app/admin/orders/list-order/list-order.component.ts","src/app/admin/orders/orders-routing.module.ts","src/app/admin/orders/orders.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<section class=\\\"content-header\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h1>Thông tin chi tiết hóa đơn</h1>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <ol class=\\\"breadcrumb float-sm-right\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/admin\\\">Trang chủ</a></li>\\n          <li class=\\\"breadcrumb-item active\\\">Chi tiết hóa đơn</li>\\n        </ol>\\n      </div>\\n    </div>\\n  </div><!-- /.container-fluid -->\\n</section>\\n\\n<!-- Main content -->\\n<section class=\\\"content\\\">\\n\\n  <!-- Default box -->\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <h3 class=\\\"card-title\\\">Chi tiết đơn hàng</h3>\\n      <div class=\\\"card-tools\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered\\\" id=\\\"table-warehouse-bill-detail\\\">\\n        <thead>\\n        <tr>\\n          <th style=\\\"width: 10px\\\">#</th>\\n          <th>Tên sản phẩm</th>\\n          <th>Số lượng</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let orderDetail of listOrderDetail; index as i\\\">\\n          <td>{{i + 1}}</td>\\n          <td *ngIf=\\\"orderDetail.product!=null\\\">{{orderDetail.product.name}}</td>\\n          <td>{{orderDetail.amount}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <!-- /.card-body -->\\n  </div>\\n</section>\\n\"","export default \"<section class=\\\"content-header\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h1>Danh sách đơn hàng đang chờ</h1>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <ol class=\\\"breadcrumb float-sm-right\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/admin\\\">Trang chủ</a></li>\\n          <li class=\\\"breadcrumb-item active\\\">Danh sách đơn hàng đang chờ</li>\\n        </ol>\\n      </div>\\n    </div>\\n  </div><!-- /.container-fluid -->\\n</section>\\n\\n<section class=\\\"content\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <h3 class=\\\"card-title\\\"></h3>\\n      <div class=\\\"card-tools\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered\\\" id=\\\"table-warehouse\\\">\\n        <thead>\\n        <tr>\\n          <th style=\\\"width: 10px\\\">#</th>\\n          <th>Mã đơn hàng</th>\\n          <th>Ngày tạo</th>\\n          <th>Tên người đặt hàng</th>\\n          <th>Trạng thái</th>\\n          <th style=\\\"width: 160px\\\"></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let orders of socketService.listOrder; index as i\\\">\\n          <td>{{i + 1}}</td>\\n          <td>\\n            <a [routerLink]=\\\"['info',orders.id]\\\">{{orders.id}}</a>\\n          </td>\\n          <td>{{dateService.convertDate(orders.createDate)}}</td>\\n          <td *ngIf=\\\"orders.user!=null\\\">{{orders.user.email}}</td>\\n          <td>{{orders.status ? \\\"Đã xác nhận\\\" : \\\"Đang chờ xác nhận\\\"}}</td>\\n          <td>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\" style=\\\"color: white\\\" data-toggle=\\\"modal\\\"\\n                        data-target=\\\"#modal-confirm\\\" (click)=\\\"getOrderId(orders.id)\\\">\\n                  <i class=\\\"fas fa-check\\\"></i>\\n                </button>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" style=\\\"color: white\\\" data-toggle=\\\"modal\\\"\\n                        data-target=\\\"#modal-delete\\\" (click)=\\\"getOrderId(orders.id)\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"modal-confirm\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Xác nhận đơn hàng</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>Bạn có muốn xác nhận đơn hàng này không ?</p>\\n        </div>\\n        <div class=\\\"modal-footer justify-content-between\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Đóng</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirmOrder(id)\\\">Đồng ý</button>\\n        </div>\\n      </div>\\n      <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"modal-delete\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Hủy đơn hàng</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>Bạn có muốn hủy đơn hàng này không ?</p>\\n        </div>\\n        <div class=\\\"modal-footer justify-content-between\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Đóng</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteOrder(id)\\\">Xóa</button>\\n        </div>\\n      </div>\\n      <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n  </div>\\n</section>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL29yZGVycy9pbmZvLW9yZGVyL2luZm8tb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {OrdersDetail} from \"../../../model/orders-detail\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\nimport {OrdersService} from \"../../../service/order/orders.service\";\nimport {Orders} from \"../../../model/orders\";\n\n@Component({\n  selector: 'app-info-order',\n  templateUrl: './info-order.component.html',\n  styleUrls: ['./info-order.component.scss']\n})\nexport class InfoOrderComponent implements OnInit {\n  listOrderDetail: OrdersDetail[] = [];\n  sub: Subscription;\n  id: number;\n  currentOrder: Orders;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private ordersService: OrdersService) {\n    this.sub = this.activatedRoute.paramMap.subscribe(async (paramMap: ParamMap) => {\n      this.id = +paramMap.get('id');\n      this.currentOrder = await this.getCurrentOrder(this.id);\n      this.getAllOrderDetailByOrder(this.currentOrder);\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  getCurrentOrder(id: number) {\n    return this.ordersService.getOrders(id).toPromise();\n  }\n\n  getAllOrderDetailByOrder(orders: Orders) {\n    this.ordersService.getAllOrderDetail(orders.id).subscribe(listOrderDetail => {\n      this.listOrderDetail = listOrderDetail;\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL29yZGVycy9saXN0LW9yZGVyL2xpc3Qtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Orders} from \"../../../model/orders\";\nimport {OrdersService} from \"../../../service/order/orders.service\";\nimport {NotificationService} from \"../../../service/notification/notification.service\";\nimport {Notification} from \"../../../model/notification\";\nimport {DateService} from \"../../../service/date/date.service\";\nimport {SocketService} from '../../../service/socket/socket.service';\n\ndeclare var $: any;\ndeclare var Swal: any;\n\n@Component({\n  selector: 'app-list-order',\n  templateUrl: './list-order.component.html',\n  styleUrls: ['./list-order.component.scss']\n})\nexport class ListOrderComponent implements OnInit, OnDestroy {\n  id: number;\n\n  constructor(private ordersService: OrdersService,\n              private dateService: DateService,\n              private notificationService: NotificationService,\n              private socketService: SocketService) {\n    this.socketService.connectToNotification();\n    this.socketService.getAllOrdersWithDataTable();\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.socketService.disconnect();\n  }\n\n  getOrderId(id: number) {\n    this.id = id;\n  }\n\n  getOrder(id: number) {\n    return this.ordersService.getOrders(id).toPromise();\n  }\n\n  async deleteOrder(id: number) {\n    let orders = await this.getOrder(id);\n    const notification: Notification = {\n      message: \"Đơn hàng \" + orders.id + \" của bạn đã bị hủy\",\n      user: {\n        id: orders.user.id\n      }\n    }\n    this.ordersService.deleteOrders(id).subscribe(() => {\n      this.createNotification(notification);\n      this.socketService.getAllOrders();\n      $(function () {\n        $('#modal-delete').modal('hide');\n      })\n      $(function () {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        Toast.fire({\n          type: 'success',\n          title: 'Hủy đơn hàng thành công'\n        });\n      });\n    }, () => {\n      $(function () {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        Toast.fire({\n          type: 'error',\n          title: 'Hủy đơn hàng thất bại'\n        });\n      });\n    })\n  }\n\n  async confirmOrder(id: number) {\n    let orders = await this.getOrder(id);\n    const notification: Notification = {\n      message: \"Đơn hàng \" + orders.id + \" của bạn đã được xác nhận\",\n      user: {\n        id: orders.user.id\n      },\n      status: false\n    }\n    orders.status = true;\n    this.ordersService.updateOrders(id, orders).subscribe(() => {\n      this.createNotification(notification);\n      this.socketService.getAllOrders();\n      $(function () {\n        $('#modal-confirm').modal('hide');\n      })\n      $(function () {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        Toast.fire({\n          type: 'success',\n          title: 'Đơn hàng đã được xác nhận'\n        });\n      });\n    }, () => {\n      $(function () {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        Toast.fire({\n          type: 'error',\n          title: 'Xác nhận đơn hàng thất bại'\n        });\n      });\n    })\n  }\n\n  createNotification(notification: Notification) {\n    this.socketService.sendNotification(notification);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ListOrderComponent} from \"./list-order/list-order.component\";\nimport {InfoOrderComponent} from \"./info-order/info-order.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListOrderComponent\n  },\n  {\n    path: 'info/:id',\n    component: InfoOrderComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ListOrderComponent} from \"./list-order/list-order.component\";\nimport {OrdersRoutingModule} from \"./orders-routing.module\";\nimport {InfoOrderComponent} from \"./info-order/info-order.component\";\n\n\n\n@NgModule({\n  declarations: [\n    InfoOrderComponent,\n    ListOrderComponent\n  ],\n  imports: [\n    CommonModule,\n    OrdersRoutingModule\n  ]\n})\nexport class OrdersModule { }\n"],"sourceRoot":"webpack:///","file":"orders-orders-module-es5.js"}